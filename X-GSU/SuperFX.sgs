; SuperFX
; Summers Pittman <secondsun@gmail.com>
; 16-bit 0.16-fixed point reciprocol
; reciprocol

.include "libSFX.i"
.include "structs/structs.sgs"

.segment "GSURAM"
camera_mem:
  .res .sizeof(camera)
world_matrix_mem:
  .res .sizeof(matrix4)
.include "common/stack.sgs"

.segment "GSUCODE"
GSU_Code:
.PROC camera_demo
.define zaxis r1
.define xaxis r2
.define yaxis r3
.define stackbackup r4

camera_demo:
	;init_camera ; I've hardcoded eye 0,0,0 lookAt -1.5,0,-1.5, up 0,1,0 

	iwt r1, #(camera_mem + camera::eye + vector3::xPos)
	iwt r0, #0
	stw (r1)

	iwt r1, #(camera_mem + camera::eye + vector3::yPos)
	iwt r0, #0
	stw (r1)
	
	iwt r1, #(camera_mem + camera::eye + vector3::zPos)
	iwt r0, #0
	stw (r1)
	
	;Create lookAt
	iwt r1, #(camera_mem + camera::lookAt + vector3::xPos)
	iwt r0, #$FF80 ; -1.5 in 8.8 twos compliment fixed point
	stw (r1)

	iwt r1, #(camera_mem + camera::lookAt + vector3::yPos)
	iwt r0, #0
	stw (r1)
	
	iwt r1, #(camera_mem + camera::lookAt + vector3::zPos)
	iwt r0, #$FF80 ; -1.5 in 8.8 twos compliment fixed point
	stw (r1)
	
	;Create up
	iwt r1, #(camera_mem + camera::up + vector3::xPos)
	iwt r0, #0
	stw (r1)

	iwt r1, #(camera_mem + camera::up + vector3::yPos)
	iwt r0, #0100; 1.0 in 8.8 twos compliment fixed point
	stw (r1)
	
	iwt r1, #(camera_mem + camera::up + vector3::zPos)
	iwt r0, #0
	stw (r1)

	cache
	

	;backup stack pointer
	move stackbackup, stackPointer

	;subtract lookAt-eye
    ;ALLOCATE Three VECTORS
	iwt r0, #0

	move zaxis, stackPointer
	
	gsu_stack_push;zaxis.x
	gsu_stack_push;zaxis.y
	gsu_stack_push;zaxis.z

	move xaxis, stackPointer
	
	gsu_stack_push;xaxis.x
	gsu_stack_push;xaxis.y
	gsu_stack_push;xaxis.z

	move yaxis, stackPointer
	
	gsu_stack_push;yaxis.x
	gsu_stack_push;yaxis.y
	gsu_stack_push;yaxis.z


	;restor stack pointer
	move stackPointer, stackbackup
	stop
	nop
	stop
	nop



.endproc
