; SuperFX
; Summers Pittman <secondsun@gmail.com>
; 16-bit 0.16-fixed point reciprocol
; reciprocol

.include "common/stack.i"
.include "common/function.i"
.include "common/structs.i"
.include "common/var.i"
.include "libSFX.i"

.macro init_camera
	iwt r1, #(camera_mem + camera::eye + vector3::xPos)
	iwt r0, #$0
	stw (r1)

	iwt r1, #(camera_mem + camera::eye + vector3::yPos)
	iwt r0, #$0
	stw (r1)
	
	iwt r1, #(camera_mem + camera::eye + vector3::zPos)
	iwt r0, #$0
	stw (r1)
	
	;Create lookAt
	iwt r1, #(camera_mem + camera::lookAt + vector3::xPos)
	iwt r0, #$da33 ; -37.8 in 8.8 twos compliment fixed point
	stw (r1)

	iwt r1, #(camera_mem + camera::lookAt + vector3::yPos)
	iwt r0, #$18b3 ; 24.7 in 8.8 twos compliment fixed point
	stw (r1)
	
	iwt r1, #(camera_mem + camera::lookAt + vector3::zPos)
	iwt r0, #$1400 ; 20 in 8.8 twos compliment fixed point
	stw (r1)
	
	;Create up
	iwt r1, #(camera_mem + camera::up + vector3::xPos)
	iwt r0, #$500 ;5.0
	stw (r1)

	iwt r1, #(camera_mem + camera::up + vector3::yPos)
	iwt r0, #$500; 5.0 in 8.8 twos compliment fixed point
	stw (r1)
	
	iwt r1, #(camera_mem + camera::up + vector3::zPos)
	iwt r0, #$0 ; 0
	stw (r1)

.endmacro


.segment "GSUCODE"


GSU_Code:

init_stack
init_camera
cache
	iwt r0, #(camera_mem + camera::up )
	sm (VECTOR_SUBTRACT_IN), r0
	sm (VECTOR_CROSS_IN), r0
	;iwt R0, #(camera_mem + camera::lookAt )
	;call vector_subtract	
	iwt R0, #(camera_mem + camera::lookAt )
	; lookAt (x) up
	call vector_negate
 	stop
	nop
	stop
	nop



;Code goes in code segment
.include "gsu_maths/gsu_sqrt.i"
.include "gsu_maths/gsu_vector.i"
.include "gsu_maths/gsu_recip.i"
